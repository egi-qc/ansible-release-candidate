---

- name: Install yum-utils
  yum:
    name: yum-utils
    state: latest
  when: cmd_distribution != "cmd-one"

- name: Install yum-utils
  yum:
    name: yum-utils
    state: latest
    disablerepo: CMD-ONE*
  when: cmd_distribution == "cmd-one"

- set_fact:
    complete_pkglist: "{{ logfile | dirname }}/complete.pkgs"
    excluded_pkglist: "{{ logfile | dirname }}/excluded.pkgs"
    conflict_pkglist: "{{ logfile | dirname }}/conflict.pkgs"

- name: Validate conflict packages first: save file
  copy:
    src: "{{ role_path }}/files/conflict.pkgs"
    dest: "{{ conflict_pkglist }}" 

- name: Validate conflict packages first: install packages
  shell: yum -y install --setopt=protected_multilib=false $(cat {{ conflict_pkglist }})

- name: Validate conflict packages first: remove packages
  shell: yum -y remove $(cat {{ conflict_pkglist }})

- name: Get all the packages from UMD/CMD repositories
  shell: /usr/bin/repoquery --qf="%{name}" --disablerepo=* --enablerepo={{ distribution|upper }}-*-candidate* -a
  register: pkglist

- name: Save package list in file
  copy: 
    content: "{{ pkglist.stdout }}"
    dest: "{{ complete_pkglist }}"

- name: Save excluded packages in file
  copy:
    src: "{{ role_path }}/files/exclude.pkgs"
    dest: "{{ excluded_pkglist }}" 

- name: Save unmatched packages
  shell: "/bin/fgrep -v -f {{ excluded_pkglist }} {{ complete_pkglist }}"
  register: pkglist_unmatched

- name: Save package list in file
  copy: 
    content: "{{ pkglist_unmatched.stdout }}"
    dest: "{{ logfile }}"

- name: Install all the packages from CMD repositories
  shell: yum -y install --setopt=protected_multilib=false $(cat {{ logfile }})
  when: (ansible_distribution == "CentOS") or (ansible_distribution == "Scientific") and (release == "6")

- name: Install all the packages from CMD repositories
  shell: yum -y install $(cat {{ logfile }})
  when: (ansible_distribution == "CentOS") and (release == "7")
